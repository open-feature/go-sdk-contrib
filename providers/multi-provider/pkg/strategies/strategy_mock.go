// Code generated by MockGen. DO NOT EDIT.
// Source: strategies.go
//
// Generated by this command:
//
//	mockgen -source=strategies.go -destination=../../pkg/strategies/strategy_mock.go -package=strategies
//

// Package strategies is a generated GoMock package.
package strategies

import (
	context "context"
	reflect "reflect"

	openfeature "github.com/open-feature/go-sdk/openfeature"
	gomock "go.uber.org/mock/gomock"
)

// MockStrategy is a mock of Strategy interface.
type MockStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockStrategyMockRecorder
	isgomock struct{}
}

// MockStrategyMockRecorder is the mock recorder for MockStrategy.
type MockStrategyMockRecorder struct {
	mock *MockStrategy
}

// NewMockStrategy creates a new mock instance.
func NewMockStrategy(ctrl *gomock.Controller) *MockStrategy {
	mock := &MockStrategy{ctrl: ctrl}
	mock.recorder = &MockStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStrategy) EXPECT() *MockStrategyMockRecorder {
	return m.recorder
}

// BooleanEvaluation mocks base method.
func (m *MockStrategy) BooleanEvaluation(ctx context.Context, flag string, defaultValue bool, evalCtx openfeature.FlattenedContext) openfeature.BoolResolutionDetail {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BooleanEvaluation", ctx, flag, defaultValue, evalCtx)
	ret0, _ := ret[0].(openfeature.BoolResolutionDetail)
	return ret0
}

// BooleanEvaluation indicates an expected call of BooleanEvaluation.
func (mr *MockStrategyMockRecorder) BooleanEvaluation(ctx, flag, defaultValue, evalCtx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BooleanEvaluation", reflect.TypeOf((*MockStrategy)(nil).BooleanEvaluation), ctx, flag, defaultValue, evalCtx)
}

// FloatEvaluation mocks base method.
func (m *MockStrategy) FloatEvaluation(ctx context.Context, flag string, defaultValue float64, evalCtx openfeature.FlattenedContext) openfeature.FloatResolutionDetail {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FloatEvaluation", ctx, flag, defaultValue, evalCtx)
	ret0, _ := ret[0].(openfeature.FloatResolutionDetail)
	return ret0
}

// FloatEvaluation indicates an expected call of FloatEvaluation.
func (mr *MockStrategyMockRecorder) FloatEvaluation(ctx, flag, defaultValue, evalCtx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FloatEvaluation", reflect.TypeOf((*MockStrategy)(nil).FloatEvaluation), ctx, flag, defaultValue, evalCtx)
}

// IntEvaluation mocks base method.
func (m *MockStrategy) IntEvaluation(ctx context.Context, flag string, defaultValue int64, evalCtx openfeature.FlattenedContext) openfeature.IntResolutionDetail {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IntEvaluation", ctx, flag, defaultValue, evalCtx)
	ret0, _ := ret[0].(openfeature.IntResolutionDetail)
	return ret0
}

// IntEvaluation indicates an expected call of IntEvaluation.
func (mr *MockStrategyMockRecorder) IntEvaluation(ctx, flag, defaultValue, evalCtx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IntEvaluation", reflect.TypeOf((*MockStrategy)(nil).IntEvaluation), ctx, flag, defaultValue, evalCtx)
}

// Name mocks base method.
func (m *MockStrategy) Name() EvaluationStrategy {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Name")
	ret0, _ := ret[0].(EvaluationStrategy)
	return ret0
}

// Name indicates an expected call of Name.
func (mr *MockStrategyMockRecorder) Name() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Name", reflect.TypeOf((*MockStrategy)(nil).Name))
}

// ObjectEvaluation mocks base method.
func (m *MockStrategy) ObjectEvaluation(ctx context.Context, flag string, defaultValue any, evalCtx openfeature.FlattenedContext) openfeature.InterfaceResolutionDetail {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ObjectEvaluation", ctx, flag, defaultValue, evalCtx)
	ret0, _ := ret[0].(openfeature.InterfaceResolutionDetail)
	return ret0
}

// ObjectEvaluation indicates an expected call of ObjectEvaluation.
func (mr *MockStrategyMockRecorder) ObjectEvaluation(ctx, flag, defaultValue, evalCtx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ObjectEvaluation", reflect.TypeOf((*MockStrategy)(nil).ObjectEvaluation), ctx, flag, defaultValue, evalCtx)
}

// StringEvaluation mocks base method.
func (m *MockStrategy) StringEvaluation(ctx context.Context, flag, defaultValue string, evalCtx openfeature.FlattenedContext) openfeature.StringResolutionDetail {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StringEvaluation", ctx, flag, defaultValue, evalCtx)
	ret0, _ := ret[0].(openfeature.StringResolutionDetail)
	return ret0
}

// StringEvaluation indicates an expected call of StringEvaluation.
func (mr *MockStrategyMockRecorder) StringEvaluation(ctx, flag, defaultValue, evalCtx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StringEvaluation", reflect.TypeOf((*MockStrategy)(nil).StringEvaluation), ctx, flag, defaultValue, evalCtx)
}
